import <file:///tmp/org/meandre/components/readability/measures/FleschKincaidReadabilityMeasure.rdf>
import <file:///tmp/org/meandre/components/rdf/zotero/URLsExtractor.rdf>
import <file:///tmp/org/meandre/components/io/webservice/ServiceHeadPost.rdf>
import <file:///tmp/org/meandre/components/io/webservice/ServiceTailString.rdf>
import <file:///tmp/org/meandre/components/io/url/URLContent.rdf>
import <file:///tmp/org/meandre/components/control/ForkX2.rdf>
import <file:///tmp/org/meandre/components/text/transform/ProcessTextBasedOnFormat.rdf>
import <file:///tmp/org/meandre/components/io/PDFTextExtractor.rdf>

#import <http://edward4.ncsa.uiuc.edu:1714/public/services/repository.ttl>

alias <meandre://seasr.org/components/zotero/urls-extractor> as UE
alias <meandre://seasr.org/components/zotero/service-head-post> as SHP
alias <meandre://seasr.org/components/zotero/service-tail-text> as STS
alias <meandre://seasr.org/components/zotero/flesch-kincaid-readability-measure> as FKRM
alias <meandre://seasr.org/components/urlcontent> as URL
alias <meandre://seasr.org/components/fork-x2> as FORK
alias <meandre://seasr.org/components/processtextbasedonformat> as FORMAT
alias <meandre://seasr.org/components/pdftextextractor> as PDFEXT


ue,shp,sts,fkrm,url,fork = UE(),SHP(),STS(),FKRM(),URL(),FORK()
format,pdfext = FORMAT(),PDFEXT()
@head = shp()
@urls = ue(value_map:head.value_map)
@fork2 = fork(object:urls.item_url)
@cond = format(URL:fork2.object_1)
@getpdf = pdfext(URL:cond.PDF_URL)
@gettext = url(URL:cond.TXT_URL; URL:cond.HTML_URL)
@report = fkrm(Text:gettext.Text;Text:getpdf.Text;last_item:urls.last_item;item_title:urls.item_title;item_url:fork2.object_2)
sts(string:report.report;string:urls.no_data;response:head.response;semaphore:head.semaphore)



